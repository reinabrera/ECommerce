// <auto-generated />
using System;
using ECommerce2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240730061822_AddedNewItemInCategories")]
    partial class AddedNewItemInCategories
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerce2.Models.AdditionalDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAdditionalDetails");
                });

            modelBuilder.Entity("ECommerce2.Models.AdditionalImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ImageId")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAdditionalImages");
                });

            modelBuilder.Entity("ECommerce2.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ECommerce2.Models.AttributeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Attributes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Color",
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Size",
                            Type = 0
                        });
                });

            modelBuilder.Entity("ECommerce2.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Men"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Women"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Accessories"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Men Shoes"
                        });
                });

            modelBuilder.Entity("ECommerce2.Models.Partnership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyWebsite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("Partnerships");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "Lorem Ipsum",
                            CompanyWebsite = "#",
                            ImageId = 4
                        },
                        new
                        {
                            Id = 2,
                            CompanyName = "Lorem Ipsum",
                            CompanyWebsite = "#",
                            ImageId = 5
                        },
                        new
                        {
                            Id = 3,
                            CompanyName = "Lorem Ipsum",
                            CompanyWebsite = "#",
                            ImageId = 6
                        },
                        new
                        {
                            Id = 4,
                            CompanyName = "Lorem Ipsum",
                            CompanyWebsite = "#",
                            ImageId = 7
                        },
                        new
                        {
                            Id = 5,
                            CompanyName = "Lorem Ipsum",
                            CompanyWebsite = "#",
                            ImageId = 8
                        },
                        new
                        {
                            Id = 6,
                            CompanyName = "Lorem Ipsum",
                            CompanyWebsite = "#",
                            ImageId = 9
                        },
                        new
                        {
                            Id = 7,
                            CompanyName = "Lorem Ipsum",
                            CompanyWebsite = "#",
                            ImageId = 10
                        },
                        new
                        {
                            Id = 8,
                            CompanyName = "Lorem Ipsum",
                            CompanyWebsite = "#",
                            ImageId = 11
                        },
                        new
                        {
                            Id = 9,
                            CompanyName = "Lorem Ipsum",
                            CompanyWebsite = "#",
                            ImageId = 12
                        });
                });

            modelBuilder.Entity("ECommerce2.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Inventory")
                        .HasColumnType("int");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<int?>("ListPrice")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Overview")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SalePrice")
                        .HasColumnType("int");

                    b.Property<int?>("ShippingFee")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ECommerce2.Models.ProductAttributeJoin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AttributeId")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAttributeJoinTable");
                });

            modelBuilder.Entity("ECommerce2.Models.ProductCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("ECommerce2.Models.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFromEditor")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("ECommerce2.Models.ProductTermJoin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TermId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("TermId");

                    b.ToTable("ProductTermJoinTable");
                });

            modelBuilder.Entity("ECommerce2.Models.SiteMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SiteMedias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FileName = "special-promotion-1",
                            FilePath = "\\Media\\special-promotion-1.jpg"
                        },
                        new
                        {
                            Id = 2,
                            FileName = "special-promotion-2",
                            FilePath = "\\Media\\special-promotion-2.jpg"
                        },
                        new
                        {
                            Id = 3,
                            FileName = "special-promotion-3",
                            FilePath = "\\Media\\special-promotion-3.jpg"
                        },
                        new
                        {
                            Id = 4,
                            FileName = "logo-1",
                            FilePath = "\\Media\\logo-1.svg"
                        },
                        new
                        {
                            Id = 5,
                            FileName = "logo-2",
                            FilePath = "\\Media\\logo-2.svg"
                        },
                        new
                        {
                            Id = 6,
                            FileName = "logo-3",
                            FilePath = "\\Media\\logo-3.svg"
                        },
                        new
                        {
                            Id = 7,
                            FileName = "logo-4",
                            FilePath = "\\Media\\logo-4.svg"
                        },
                        new
                        {
                            Id = 8,
                            FileName = "logo-5",
                            FilePath = "\\Media\\logo-5.svg"
                        },
                        new
                        {
                            Id = 9,
                            FileName = "logo-6",
                            FilePath = "\\Media\\logo-6.svg"
                        },
                        new
                        {
                            Id = 10,
                            FileName = "logo-7",
                            FilePath = "\\Media\\logo-7.svg"
                        },
                        new
                        {
                            Id = 11,
                            FileName = "logo-8",
                            FilePath = "\\Media\\logo-8.svg"
                        },
                        new
                        {
                            Id = 12,
                            FileName = "logo-9",
                            FilePath = "\\Media\\logo-9.svg"
                        },
                        new
                        {
                            Id = 13,
                            FileName = "member-1",
                            FilePath = "\\Media\\member-1.png"
                        },
                        new
                        {
                            Id = 14,
                            FileName = "member-2",
                            FilePath = "\\Media\\member-2.png"
                        },
                        new
                        {
                            Id = 15,
                            FileName = "member-3",
                            FilePath = "\\Media\\member-3.png"
                        },
                        new
                        {
                            Id = 16,
                            FileName = "member-4",
                            FilePath = "\\Media\\member-4.png"
                        },
                        new
                        {
                            Id = 17,
                            FileName = "member-5",
                            FilePath = "\\Media\\member-5.png"
                        },
                        new
                        {
                            Id = 18,
                            FileName = "member-6",
                            FilePath = "\\Media\\member-6.png"
                        },
                        new
                        {
                            Id = 19,
                            FileName = "description-1",
                            FilePath = "\\Media\\description-1.jpg"
                        },
                        new
                        {
                            Id = 20,
                            FileName = "description-2",
                            FilePath = "\\Media\\description-2.jpg"
                        },
                        new
                        {
                            Id = 21,
                            FileName = "description-3",
                            FilePath = "\\Media\\description-3.jpg"
                        });
                });

            modelBuilder.Entity("ECommerce2.Models.SpecialPromotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ButtonText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SiteMediaId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SiteMediaId");

                    b.ToTable("SpecialPromotions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ButtonText = "SHOP NOW",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin ac dictum.",
                            SiteMediaId = 1,
                            Title = "20% Off On Tank Tops",
                            Url = "#"
                        },
                        new
                        {
                            Id = 2,
                            ButtonText = "SHOP NOW",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin ac dictum.",
                            SiteMediaId = 2,
                            Title = "Latest Eyewear For You",
                            Url = "#"
                        },
                        new
                        {
                            Id = 3,
                            ButtonText = "SHOP NOW",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin ac dictum.",
                            SiteMediaId = 3,
                            Title = "Let's Lorem Suit Up!",
                            Url = "#"
                        });
                });

            modelBuilder.Entity("ECommerce2.Models.TeamMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("Team");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageId = 13,
                            Name = "Harvey Spector",
                            Position = "Founder - CEO"
                        },
                        new
                        {
                            Id = 2,
                            ImageId = 14,
                            Name = "Jessica Pearsonn",
                            Position = "COO"
                        },
                        new
                        {
                            Id = 3,
                            ImageId = 15,
                            Name = "Rachel Zain",
                            Position = "Marketing Head"
                        },
                        new
                        {
                            Id = 4,
                            ImageId = 16,
                            Name = "Luise Litt",
                            Position = "Lead Developer"
                        },
                        new
                        {
                            Id = 5,
                            ImageId = 17,
                            Name = "Katrina Bennett",
                            Position = "Intern Designer"
                        },
                        new
                        {
                            Id = 6,
                            ImageId = 18,
                            Name = "Mike Ross",
                            Position = "Intern Designer"
                        });
                });

            modelBuilder.Entity("ECommerce2.Models.Term", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AttributeId")
                        .HasColumnType("int");

                    b.Property<string>("ColorValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.ToTable("AttributeTerms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AttributeId = 1,
                            ColorValue = "#000000",
                            Name = "Black"
                        },
                        new
                        {
                            Id = 2,
                            AttributeId = 1,
                            ColorValue = "#aa7627",
                            Name = "Brown"
                        },
                        new
                        {
                            Id = 3,
                            AttributeId = 1,
                            ColorValue = "#ce592f",
                            Name = "Red"
                        },
                        new
                        {
                            Id = 4,
                            AttributeId = 1,
                            ColorValue = "#1fb1c1",
                            Name = "Aqua"
                        },
                        new
                        {
                            Id = 5,
                            AttributeId = 1,
                            ColorValue = "#1e73be",
                            Name = "Blue"
                        },
                        new
                        {
                            Id = 6,
                            AttributeId = 1,
                            ColorValue = "#81d742",
                            Name = "Green"
                        },
                        new
                        {
                            Id = 7,
                            AttributeId = 1,
                            ColorValue = "#f49922",
                            Name = "Orange"
                        },
                        new
                        {
                            Id = 8,
                            AttributeId = 1,
                            ColorValue = "#ce25e8",
                            Name = "Purple"
                        },
                        new
                        {
                            Id = 9,
                            AttributeId = 1,
                            ColorValue = "#eac820",
                            Name = "Yellow"
                        },
                        new
                        {
                            Id = 10,
                            AttributeId = 1,
                            ColorValue = "#ffffff",
                            Name = "White"
                        },
                        new
                        {
                            Id = 11,
                            AttributeId = 2,
                            Name = "S"
                        },
                        new
                        {
                            Id = 12,
                            AttributeId = 2,
                            Name = "M"
                        },
                        new
                        {
                            Id = 13,
                            AttributeId = 2,
                            Name = "L"
                        });
                });

            modelBuilder.Entity("ECommerce2.Models.TermVariation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TermId")
                        .HasColumnType("int");

                    b.Property<int>("VariantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TermId");

                    b.HasIndex("VariantId");

                    b.ToTable("TermVariation");
                });

            modelBuilder.Entity("ECommerce2.Models.Variant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<int?>("Inventory")
                        .HasColumnType("int");

                    b.Property<int?>("ListPrice")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SalePrice")
                        .HasColumnType("int");

                    b.Property<string>("TermsConcatenated")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("ProductId", "TermsConcatenated")
                        .IsUnique();

                    b.ToTable("Variations");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ECommerce2.Models.AdditionalDetail", b =>
                {
                    b.HasOne("ECommerce2.Models.Product", null)
                        .WithMany("AdditionalDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ECommerce2.Models.AdditionalImage", b =>
                {
                    b.HasOne("ECommerce2.Models.ProductImage", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce2.Models.Product", "Product")
                        .WithMany("AdditionalImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerce2.Models.Partnership", b =>
                {
                    b.HasOne("ECommerce2.Models.SiteMedia", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Image");
                });

            modelBuilder.Entity("ECommerce2.Models.ProductAttributeJoin", b =>
                {
                    b.HasOne("ECommerce2.Models.AttributeModel", "Attribute")
                        .WithMany()
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce2.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerce2.Models.ProductCategories", b =>
                {
                    b.HasOne("ECommerce2.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce2.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerce2.Models.ProductImage", b =>
                {
                    b.HasOne("ECommerce2.Models.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerce2.Models.ProductTermJoin", b =>
                {
                    b.HasOne("ECommerce2.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce2.Models.Term", "Term")
                        .WithMany()
                        .HasForeignKey("TermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Term");
                });

            modelBuilder.Entity("ECommerce2.Models.SpecialPromotion", b =>
                {
                    b.HasOne("ECommerce2.Models.SiteMedia", "SiteMedia")
                        .WithMany()
                        .HasForeignKey("SiteMediaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("SiteMedia");
                });

            modelBuilder.Entity("ECommerce2.Models.TeamMember", b =>
                {
                    b.HasOne("ECommerce2.Models.SiteMedia", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Image");
                });

            modelBuilder.Entity("ECommerce2.Models.Term", b =>
                {
                    b.HasOne("ECommerce2.Models.AttributeModel", "Attribute")
                        .WithMany("Terms")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");
                });

            modelBuilder.Entity("ECommerce2.Models.TermVariation", b =>
                {
                    b.HasOne("ECommerce2.Models.Term", "Term")
                        .WithMany()
                        .HasForeignKey("TermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce2.Models.Variant", "Variant")
                        .WithMany()
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Term");

                    b.Navigation("Variant");
                });

            modelBuilder.Entity("ECommerce2.Models.Variant", b =>
                {
                    b.HasOne("ECommerce2.Models.ProductImage", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ECommerce2.Models.Product", null)
                        .WithMany("Variations")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ECommerce2.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ECommerce2.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce2.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ECommerce2.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ECommerce2.Models.AttributeModel", b =>
                {
                    b.Navigation("Terms");
                });

            modelBuilder.Entity("ECommerce2.Models.Product", b =>
                {
                    b.Navigation("AdditionalDetails");

                    b.Navigation("AdditionalImages");

                    b.Navigation("ProductImages");

                    b.Navigation("Variations");
                });
#pragma warning restore 612, 618
        }
    }
}
