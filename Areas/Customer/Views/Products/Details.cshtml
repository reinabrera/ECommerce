@using ECommerce2.Models.ViewModels
@model ProductDetailsVM

@section CssOverrides {
    <link rel="stylesheet" href="https://cdn.ckeditor.com/ckeditor5/42.0.0/ckeditor5.css">
}

<div id="details-page-content" class="container-fix">
    <div class="container">
        <section id="product-details">
            <div class="image-gallery-and-details py-5">

                <div class="row gx-5">
                    <div class="col-6">
                        <div class="product-gallery-carousel">
                            <section id="main-carousel" class="splide" aria-label="Products Gallery">
                                <div class="splide__track">
                                    <ul class="splide__list">
                                        @{int imgIndex = 0;}
                                        @foreach (ProductImageVM image in Model.Images)
                                        {
                                            <li class="splide__slide" data-index="@imgIndex" data-img-id="@image.Id">
                                                <img src="@image.FilePath" class="w-100" alt="@image.FileName">
                                            </li>
                                            imgIndex++;
                                        }
                                    </ul>
                                </div>
                            </section>

                            @if (Model.Images.Count > 1)
                            {
                                <ul id="thumbnails" class="thumbnails row row-cols-4 gx-3 mt-3 list-unstyled">
                                    @foreach (ProductImageVM image in Model.Images)
                                    {
                                        <li class="col">
                                            <div class="thumbnail" data-thumbnail-img-id="@image.Id">
                                                <img src="@image.FilePath" alt="@image.FileName">
                                            </div>
                                        </li>
                                    }
                                </ul>
                            }
                        </div>
                        
                    </div>
                    <div class="col-6">
                        <div class="details-breadcrumbs">
                            <nav aria-label="breadcrumb">
                                <ol class="breadcrumb">
                                    <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index" class="text-muted">Home</a></li>
                                    <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Store" asp-route-category="@Model.Categories.FirstOrDefault()" class="text-muted">@Model.Categories.FirstOrDefault()</a></li>
                                    <li class="breadcrumb-item"><span class="text-muted">@Model.Name</span></li>
                                </ol>
                            </nav>
                            <div class="product-content">
                                <h5 class="category fw-normal fs-6">@Model.Categories.FirstOrDefault()</h5>
                                <h2 class="fw-normal mt-3">@Model.Name</h2>

                                <div class="price-and-shipping mt-3">

                                    @if (Model.MinPrice == Model.MaxPrice)
                                    {
                                        if (Model.SalePrice == null)
                                        {
                                            <span class="fs-3 fw-600">$@Model.ListPrice</span>
                                        } else
                                        {
                                            <span class="fs-3 fw-600 text-muted"><del>$@Model.ListPrice</del></span> <span class="fs-3 fw-600">$@Model.SalePrice</span>
                                        }
                                    } else
                                    {
                                        <span class="fs-3 fw-600">$@Model.MinPrice – $@Model.MaxPrice</span>
                                    }
                                    
                                    @if (Model.ShippingFee == null)
                                    {
                                        <span class="shipping">+ Free Shipping</span>
                                    }
                                </div>

                                <div class="overview lh-lg mt-2">
                                    <p>@Model.Overview</p>
                                </div>

                                <form id="add-to-cart-form"
                                asp-controller="Cart"
                                asp-action="Add"
                                asp-route-returnUrl="@Context.Request.Path"
                                >
                                    <input type="hidden" asp-for="ProductId" />
                                    @if (Model.VariantTermsGrouped.Any())
                                    {
                                        <input type="hidden" id="VariantId" name="VariantId" required />

                                        @Html.Partial("_VariantRadios", Model.VariantTermsGrouped)

                                        <button type="button" class="btn text-muted p-0" id="clear-form-btn" style="visibility: hidden">CLEAR</button>
                                        <hr />

                                        <div class="variant-price my-3" style="display: none;"></div>
                                    }
                                    <div class="d-flex">
                                        <input type="number" min="1" max="@Model.Inventory" value="1" name="Quantity" class="text-muted item-count" />
                                        <button type="submit" class="btn btn-blue ms-3 fw-600" id="submit-btn" @(Model.VariantTermsGrouped.Any() ? "disabled" : "")>ADD TO CART</button>
                                    </div>
                                </form>
                                <hr />
                                <div class="category-list">
                                    <span>Category:
                                        @for (int i = 0; i < Model.Categories.Count; i++)
                                        {
                                            string cat = Model.Categories[i];
                                            <a asp-controller="Home" asp-action="Store" asp-route-category="@cat">@cat</a>@(i != Model.Categories.Count - 1 ? ", " : "")
                                        }
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="product-tabs mt-5">
                    <ul class="nav nav-tabs border-top" id="myTab" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="description-tab" data-bs-toggle="tab" data-bs-target="#description-tab-pane" type="button" role="tab" aria-controls="description-tab-pane" aria-selected="true">Description</button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="addtl-info-tab" data-bs-toggle="tab" data-bs-target="#addtl-info-tab-pane" type="button" role="tab" aria-controls="addtl-info-tab-pane" aria-selected="false">Additonal Information</button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="reviews-tab" data-bs-toggle="tab" data-bs-target="#reviews-tab-pane" type="button" role="tab" aria-controls="reviews-tab-pane" aria-selected="false">Reviews (@Model.Reviews.Count())</button>
                        </li>
                    </ul>
                    <div class="tab-content" id="myTabContent">
                        <div class="tab-pane fade show active py-3" id="description-tab-pane" role="tabpanel" aria-labelledby="description-tab" tabindex="0">
                            <h4>
                                Product description
                            </h4>
                            <div id="displayCkContent">
                                @Html.Raw(Model.Description)
                            </div>
                        </div>
                        <div class="tab-pane fade py-3" id="addtl-info-tab-pane" role="tabpanel" aria-labelledby="addtl-info-tab" tabindex="0">
                            <table class="table table-bordered">
                                @foreach (AdditionalDetailVM item in Model.AdditionalDetails)
                                {
                                    <tr>
                                        <th>
                                            @item.Name
                                        </th>
                                        <th>
                                            @item.Value
                                        </th>
                                    </tr>
                                }
                            </table>
                        </div>
                        <div class="tab-pane fade py-3" id="reviews-tab-pane" role="tabpanel" aria-labelledby="reviews-tab" tabindex="0">

                            @if (!Model.Reviews.Any())
                            {
                                <p>There are no reviews yet.</p>
                            }

                            <div class="border p-4">
                                @if (!Model.Reviews.Any())
                                {
                                    <h5 class="fw-normal fs-4">
                                        Be the first to review “@Model.Name”
                                    </h5>
                                } else
                                {
                                    <h5 class="fw-normal fs-4">Add review for “@Model.Name”</h5>
                                }

                                <form class="mt-4" id="product-review-form" asp-controller="Reviews" asp-action="Add" asp-route-returnUrl="@Context.Request.Path">
                                    <input type="hidden" asp-for="@Model.ProductId" />
                                    <div class="d-flex">
                                        <label class="fs-5">
                                            Your rating *
                                        </label>
                                        <div class="star-rating-inputs ms-2 fs-6">
                                            <input type="radio" name="Rating" value="1" id="st-1" required />
                                            <label for="st-1"><i class="bi bi-star-fill"></i></label>
                                            <input type="radio" name="Rating" value="2" id="st-2" required />
                                            <label for="st-2"><i class="bi bi-star-fill"></i></label>
                                            <input type="radio" name="Rating" value="3" id="st-3" required />
                                            <label for="st-3"><i class="bi bi-star-fill"></i></label>
                                            <input type="radio" name="Rating" value="4" id="st-4" required />
                                            <label for="st-4"><i class="bi bi-star-fill"></i></label>
                                            <input type="radio" name="Rating" value="5" id="st-5" required />
                                            <label for="st-5"><i class="bi bi-star-fill"></i></label>
                                        </div>
                                    </div>
                                    <div class="mt-2">
                                        <label class="d-block fs-5">
                                            Your review *
                                        </label>
                                        <textarea maxlength="300" minlength="100" class="w-100 border" name="ReviewText" required></textarea>
                                    </div>
                                    <button type="submit" class="btn btn-light-blue px-4 py-2 text-light fw-600 mt-2">SUBMIT</button>
                                </form>
                            </div>

                            @if (Model.Reviews.Any())
                            {
                                <div class="product-reviews mt-4">
                                    <div class="row gx-5">
                                        <div class="col-4">
                                            <h4>Customer Reviews</h4>
                                            <div class="d-flex">
                                                @{
                                                    double average = Model.Reviews.Average(r => r.Rating);
                                                    double averageRounded = (Math.Round(average * 2, MidpointRounding.AwayFromZero) / 2);
                                                }
                                                <div class="star-rating d-flex">
                                                    @for (int i = 1; i <= 5; i++)
                                                    {
                                                        if (i <= averageRounded)
                                                        {
                                                            <i class="bi bi-star-fill"></i>
                                                        }
                                                        else
                                                        {
                                                            if (i - averageRounded == 0.5d)
                                                            {
                                                                <i class="bi bi-star-half"></i>
                                                            }
                                                            else
                                                            {
                                                                <i class="bi bi-star"></i>
                                                            }
                                                        }
                                                    }
                                                </div>
                                                <div class="ms-2">
                                                    <span>@average.ToString("0.0") out of 5</span>
                                                </div>
                                            </div>

                                            <div class="ratings-chart mt-2">

                                                @{
                                                    int reviewsCount = Model.Reviews.Count();
                                                }
                                                @for (int i = 5; i >= 1; i--)
                                                {
                                                    double ratingCount = Model.Reviews.Where(r => r.Rating == i).Count();

                                                    RatingBarChartVM bar = new RatingBarChartVM()
                                                    {
                                                        Index = i,
                                                        Percentage = (int)((ratingCount / reviewsCount) * 100),
                                                    };
                                                    @(await Html.PartialAsync("_RatingBarChart", bar))
                                                }
                                            </div>


                                        </div>

                                        <div class="col">
                                            <ul class="review-items list-unstyled">
                                                @foreach (Review review in Model.Reviews)
                                                {
                                                    @(await Html.PartialAsync("_ReviewItem", review))
                                                }
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <div id="related-products" class="py-5">
                    <h3 class="fs-1 mt-4">Related Products</h3>
                    <div class="row row-cols-4 mt-4">
                        @foreach (ProductCardVM card in Model.RelatedProducts)
                        {
                            <div class="col">
                                @Html.Partial("_ProductCard", card)
                            </div>
                        }
                    </div>

                </div>
            </div>
        </section>
    </div>
</div>

@section Scripts {
    <script type="importmap">
        {
            "imports": {
                "ckeditor5": "https://cdn.ckeditor.com/ckeditor5/42.0.0/ckeditor5.js",
                "ckeditor5/": "https://cdn.ckeditor.com/ckeditor5/42.0.0/"
            }
        }
    </script>
    <script>
        var splide = new Splide('#main-carousel', {
            perPage: 1,
            pagination: false,
            arrows: false,
        });

        var thumbnails = document.getElementsByClassName('thumbnail');
        var current;

        for (var i = 0; i < thumbnails.length; i++) {
            initThumbnail(thumbnails[i], i);
        }

        function initThumbnail(thumbnail, index) {
            thumbnail.addEventListener('click', function () {
                splide.go(index);
            });
        }

        splide.on('mounted move', function () {
            var thumbnail = thumbnails[splide.index];

            if (thumbnail) {
                if (current) {
                    current.classList.remove('is-active');
                }

                thumbnail.classList.add('is-active');
                current = thumbnail;
            }
        });

        splide.mount();

        const addToCartClearBtn = $('#clear-form-btn');

        $('#add-to-cart-form .attribute-radios input[type="radio"]').on('change', async function () {
            const productId = $('#ProductId').val();
            let attrWrapperEl = $(this).closest('.attributes-radios--wrapper');
            let radioGrpLen = attrWrapperEl.children().length;
            let checked = attrWrapperEl.find('input[type="radio"]:checked');
            const submitBtn = $("#add-to-cart-form").find('#submit-btn');

            if (checked.length == radioGrpLen) {

                addToCartClearBtn.css('visibility', 'visible');
                submitBtn.removeAttr('disabled');

                const termIds = [];
                checked.each(function () {
                    termIds.push($(this).val())
                })

                const data = await GetProductVariantData(productId, termIds);

                if (data != null) {
                    const imgCarouselIndex = $(`li[data-img-id="${data.ImageId}"]`).data('index');
                    const variantPriceEl = $('.variant-price');
                    const variantIdField = $('#VariantId');

                    variantPriceEl.empty();

                    if (data.SalePrice == null) {
                        priceEl = `<span class="listing-price fs-4 fw-600">$${data.ListPrice.toFixed(2)}</span>`;
                    } else {
                        priceEl = `<span class="listing-price fs-4 fw-600 text-muted"><del>$${data.ListPrice.toFixed(2)}</del></span><span class="sale-price fs-4 fw-600"> $${data.SalePrice.toFixed(2)}</span>`;
                    }

                    variantPriceEl.append(priceEl);

                    if (variantPriceEl.is(":hidden") == true) {
                        variantPriceEl.slideDown();
                    }

                    variantIdField.val(data.Id);

                    splide.go(imgCarouselIndex);
                }
            } else {
                if (submitBtn.prop('disabled') == true) {
                    submitBtn.prop('disabled', true);
                }
            }
        })

        addToCartClearBtn.on('click', function () {
            const variantPriceEl = $('.variant-price');
            const variantIdField = $('#VariantId');

            variantPriceEl.empty();
            variantPriceEl.hide();
            variantIdField.val("");

            $('#add-to-cart-form .attribute-radios input[type="radio"]:checked').prop('checked', false);
            $('#add-to-cart-form #submit-btn').prop('disabled', true);

            $(this).css('visibility', 'hidden');
        });

    </script>
    <script type="module" src="~/js/product-cke.js"></script>
}